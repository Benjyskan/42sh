arrows.c:12:	if (tracker > st_cmd->st_txt->data_size)
arrows.c:16:		if (st_cmd->st_txt->txt[i] == '\n'
arrows.c:17:			|| st_cmd->relative_pos.col == (st_cmd->window->ws_col - 1))
arrows.c:19:			st_cmd->relative_pos.col = 0;
arrows.c:20:			st_cmd->relative_pos.row++;
arrows.c:23:			st_cmd->relative_pos.col++;
arrows.c:32:	st_txt = st_cmd->st_txt;
arrows.c:36:		get_pos(st_cmd, st_cmd->st_txt->tracker);
arrows.c:46:	st_txt = st_cmd->st_txt;
arrows.c:50:		get_pos(st_cmd, st_cmd->st_txt->tracker);
arrows.c:59:	st_cmd->st_txt->tracker = 0;
arrows.c:67:	st_txt = st_cmd->st_txt;
arrows.c:69:	get_pos(st_cmd, st_cmd->st_txt->tracker);
check_quit_hist.c:17:		if (st_cmd->st_txt->data_size == 0)
check_quit_hist.c:19:			if (st_cmd->prev)
check_quit_hist.c:21:			*st_cmd->st_txt->txt = 0;
check_quit_hist.c:24:		else if (st_cmd->st_txt->tracker >= st_cmd->st_txt->data_size)
check_sig_tab_enter_del_arr.c:40:		old_txt = st_cmd->st_txt->txt;
check_sig_tab_enter_del_arr.c:41:		if ((tmp = new_auto_completion(st_cmd->st_txt->txt, st_cmd->st_txt->tracker, vars))) // alex: tracker ou tracker + 1 ?
check_sig_tab_enter_del_arr.c:44:			if (!(st_cmd->st_txt->txt = ft_strjoin(tmp, st_cmd->st_txt->txt + st_cmd->st_txt->tracker)))
check_sig_tab_enter_del_arr.c:46:			st_cmd->st_txt->data_size = ft_strlen(st_cmd->st_txt->txt);
check_sig_tab_enter_del_arr.c:54:		retrieve_pos(&st_cmd->start_pos);
check_sig_tab_enter_del_arr.c:56:		st_cmd->st_txt->tracker = 0;
check_sig_tab_enter_del_arr.c:58:		st_cmd->st_txt->tracker = len_tmp;
check_sig_tab_enter_del_arr.c:59:// test avec len tmp		st_cmd->st_txt->tracker = st_cmd->st_txt->data_size;
check_sig_tab_enter_del_arr.c:60:		get_pos(st_cmd, st_cmd->st_txt->tracker);
check_sig_tab_enter_del_arr.c:99:		if (st_cmd->st_txt->tracker == 0)
check_sig_tab_enter_del_arr.c:107:		if (st_cmd->st_txt->tracker >= st_cmd->st_txt->data_size)
cursor_position.c:10:		st_cmd->start_pos.row--;
cursor_position.c:11:		st_cmd = st_cmd->next;
cursor_position.c:23:	move_cursor(st_cmd->start_pos.col + st_cmd->relative_pos.col,
cursor_position.c:24:			st_cmd->start_pos.row + st_cmd->relative_pos.row);
delete.c:35:	st_txt = st_cmd->st_txt;
delete.c:38:	get_pos(st_cmd, st_cmd->st_txt->tracker);
delete.c:54:	st_txt = st_cmd->st_txt;
delete.c:56:	get_pos(st_cmd, st_cmd->st_txt->tracker);
delete.c:60:	get_pos(st_cmd, st_cmd->st_txt->tracker);
input_loop.c:33:	st_txt = st_cmd->st_txt;
input_loop.c:42:	get_pos(st_cmd, st_cmd->st_txt->tracker);
input_loop.c:108:			st_cmd->st_txt->tracker = st_cmd->st_txt->data_size;
input_loop.c:109:			get_pos(st_cmd, st_cmd->st_txt->tracker);
input_loop.c:120:	if (st_cmd->st_txt->data_size > INT_MAX)
input_utils.c:50:	st_txt = st_cmd->st_txt;
prompt.c:13:		len = st_cmd->window->ws_col - 1 > 0 ? st_cmd->window->ws_col - 1 : 2;
prompt.c:23:		retrieve_pos(&st_cmd->start_pos);
prompt.c:28:		ft_printf("%s%s", st_cmd->st_prompt->prompt, FG_DFL);
txt_cat.c:9:	while (st_cmd->prev)
txt_cat.c:10:		st_cmd = st_cmd->prev;
txt_cat.c:14:		input = ft_strjoin(input, st_cmd->st_txt->txt);//protect ?
txt_cat.c:15:		st_cmd = st_cmd->next;
